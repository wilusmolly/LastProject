SQL> --sys의 하위관리자 계정을 이용하여 db생성 및 유저생성
SQL> --system 계정의 비번을 모르므로, 아예 여기서 바꿔
SQL> --버리자...
SQL> alter  user  system
  2  identified by manager;

User altered.

SQL> --system으로 로그인하자
SQL> conn system/maa
ERROR:
ORA-01017: invalid username/password; logon denied 


Warning: You are no longer connected to ORACLE.
SQL> conn system/manager
Connected.
SQL> --db 구축!!!
SQL> --오라클은 database 파일을 여러개를 하나의 논리적
SQL> --단위인 테이블스페이스라는 단위로 묶을수있다..
SQL> create tablespace frontspace
  2  datafile 'C:\oraclexe\app\oracle\oradata\XE\frontspace.dbf'
  3  size 5m;

Tablespace created.

SQL> --유저 생성하기
SQL> create user front
  2  identified by front
  3  default tablespace fontspace
  4  quota unlimited on frontspace;
create user front
*
ERROR at line 1:
ORA-00959: tablespace 'FONTSPACE' does not exist 


SQL> ed
Wrote file afiedt.buf

  1  create user front
  2  identified by front
  3  default tablespace frontspace
  4* quota unlimited on frontspace
SQL> /

User created.

SQL> --각종 권한 부여하기
SQL> grant create session,
  2  create table,
  3  create sequence
  4  to front;

Grant succeeded.

SQL> conn front/front
Connected.
SQL> --코멘트 게시판 테이블,시퀀스 생성
SQL> ed
Wrote file afiedt.buf

  1  create   table  board(
  2    board_id  number  primary key 
  3  , writer varchar2(40)
  4  , title varchar2(200)
  5  , content clob 
  6  , regdate  date default sysdate
  7  , hit  number  default 0
  8* )
SQL> /

Table created.

SQL> --댓글 테이블
SQL> ed
Wrote file afiedt.buf

  1  create  table  comments(
  2    comments_id   number  primary key 
  3  , msg varchar2(200)
  4  , author  varchar2(40)
  5  , board_id  number  -- forein key 될 예정
  6* )
SQL> /

Table created.

SQL> --board가 사용할 시퀀스
SQL> --시퀀스란? 자동증가될수 있는  숫자값만을 보유한
SQL> --객체다. 주용도는 레코드간 유일성을 확보해주는
SQL> --데이터 보유객체..
SQL>  create  sequence  seq_board
  2  increment by 1
  3  start with 1;

Sequence created.

SQL> create  seqeunce seq_comments
  2  increment by 1
  3  start with 1;
create  seqeunce seq_comments
        *
ERROR at line 1:
ORA-00901: invalid CREATE command 


SQL> ed
Wrote file afiedt.buf

  1  create  seqeunce  seq_comments
  2  increment by 1
  3* start with 1
SQL> /
create  seqeunce  seq_comments
        *
ERROR at line 1:
ORA-00901: invalid CREATE command 


SQL> ed
Wrote file afiedt.buf

  1  create  sequence  seq_comments
  2  increment by 1
  3* start with 1
SQL> /

Sequence created.

SQL> --------------------------------------------------------------
SQL> -- 부서 테이블 생성/레코드 넣기
SQL> --------------------------------------------------------------
SQL> create table dept(
  2  deptno number
  3  ,dname varchar2(14)
  4  ,loc varchar2(13)
  5  ,primary key(deptno)
  6  );

Table created.

SQL> 
SQL> 
SQL> 
SQL> --------------------------------------------------------------
SQL> -- 사원 테이블 생성/레코드 넣기
SQL> --------------------------------------------------------------
SQL> create table emp(
  2  empno number
  3  ,ename varchar2(10)
  4  ,job varchar2(9)
  5  ,mgr number
  6  ,hiredate date
  7  ,sal number
  8  ,comm number
  9  ,deptno number
 10  ,primary key(empno)
 11  );

Table created.

SQL> 
SQL> 
SQL> 
SQL> insert into dept(deptno,dname,loc) values(10,'ACCOUNTING','NEW YORK');

1 row created.

SQL> insert into dept(deptno,dname,loc) values(20,'RESEARCH','DALLAS');

1 row created.

SQL> insert into dept(deptno,dname,loc) values(30,'SALES','CHICAGO');

1 row created.

SQL> insert into dept(deptno,dname,loc) values(40,'OPERATIONS','BOSTON');

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7369,'SMITH','CLERK',7902,'80/12/17',800,20);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno) values(7499,'ALLEN','SALESMAN',7698,'81/02/20',1600,300,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno) values(7521,'WARD','SALESMAN',7698,'81/02/22',1250,500,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7566,'JONES','MANAGER',7839,'81/04/02',2975,20);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno) values(7654,'MARTIN','SALESMAN',7698,'81/09/28',1250,1400,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7698,'BLAKE','MANAGER',7839,'81/05/01',2850,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7782,'CLARK','MANAGER',7839,'81/06/09',2450,10);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7788,'SCOTT','ANALYST',7566,'87/04/19',3000,20);

1 row created.

SQL> insert into emp(empno,ename,job,hiredate,sal,deptno) values(7839,'KING','PRESIDENT','81/11/17',5000,10);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno) values(7844,'TURNER','SALESMAN',7698,'81/09/08',1500,0,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7876,'ADAMS','CLERK',7788,'87/05/23',1100,20);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7900,'JAMES','CLERK',7698,'81/12/03',950,30);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7902,'FORD','ANALYST',7566,'81/12/03',3000,20);

1 row created.

SQL> insert into emp(empno,ename,job,mgr,hiredate,sal,deptno) values(7934,'MILLER','CLERK',7782,'82/01/23',1300,10);

1 row created.

SQL> commit;

Commit complete.

SQL> -- 현재계정이 보유한 테이블 목록보기
SQL> --즉 딕셔너리를 이용해서 조회하자
SQL> select table_name from user_tables;

TABLE_NAME                                                                      
------------------------------------------------------------                    
BOARD                                                                           
COMMENTS                                                                        
DEPT                                                                            
EMP                                                                             

SQL> --시퀀스 조회하기
SQL> select sequence_name from user_sequences;

SEQUENCE_NAME                                                                   
------------------------------------------------------------                    
SEQ_BOARD                                                                       
SEQ_COMMENTS                                                                    


-- inner 조인과  outer 조인의 차이점 알기
-----------------------------------------------------------------------------------
--1.각 사원의 부서번호, 부서명, 사원명을 출력하시오
-----------------------------------------------------------------------------------
select d.deptno, dname, ename
from dept d, emp e
where d.deptno=e.deptno;

-----------------------------------------------------------------------------------
--2.위1번을, 부서명의 누락없이 출력하시오
-----------------------------------------------------------------------------------
select d.deptno, dname, ename
from dept d left outer join emp e
on e.deptno=d.deptno;

-----------------------------------------------------------------------------------
--3.부서별 종사자 수를 출력하시오
-----------------------------------------------------------------------------------
select dname, count(ename)
from emp e, dept d
where e.deptno=d.deptno
group by ename,dname;

-----------------------------------------------------------------------------------
--4.위3번을, 부서명의 누락없이 출력하시오
-----------------------------------------------------------------------------------
select dname, count(ename)
from dept d left outer join emp e
on e.deptno=d.deptno
group by ename,dname;

--group by 명시한 컬럼만의 select의 대상이 될수잇다
--예외) 이미 집계를 표현한 집계함수..

select title,writer, regdate, hit ,count(comments_id)
from board b left outer join comments c
on b.board_id=c.board_id
group by title, writer,regdate,hit; 


SQL> spool off
